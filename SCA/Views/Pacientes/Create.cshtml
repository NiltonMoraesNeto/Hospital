@model SCA.Model.Pacientes
@{
    ViewBag.Title = "Criar Novo Paciente";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    #tableUsuario tr td {
        padding: 5px 5px 5px 5px;
    }

    .drop-down {
        height: 20px;
    }

    .error {
        color: #a94442;
    }
</style>

<!-- Adicionando Javascript -->
<script type="text/javascript">

    $(document).ready(function () {

        function limpa_formulário_cep() {
            // Limpa valores do formulário de cep.
            $("#Rua").val("");
            $("#Bairro").val("");
            $("#Cidade").val("");
            $("#Estado").val("");
        }

        //Quando o campo cep perde o foco.
        $("#Cep").blur(function () {

            //Nova variável "cep" somente com dígitos.
            var cep = $(this).val().replace(/\D/g, '');

            //Verifica se campo cep possui valor informado.
            if (cep != "") {

                //Expressão regular para validar o CEP.
                var validacep = /^[0-9]{8}$/;

                //Valida o formato do CEP.
                if (validacep.test(cep)) {

                    //Preenche os campos com "..." enquanto consulta webservice.
                    $("#Rua").val("...");
                    $("#Bairro").val("...");
                    $("#Cidade").val("...");
                    $("#Estado").val("...");

                    //Consulta o webservice viacep.com.br/
                    $.getJSON("https://viacep.com.br/ws/" + cep + "/json/?callback=?", function (dados) {

                        if (!("erro" in dados)) {
                            //Atualiza os campos com os valores da consulta.
                            $("#Rua").val(dados.logradouro);
                            $("#Bairro").val(dados.bairro);
                            $("#Cidade").val(dados.localidade);
                            $("#Estado").val(dados.uf);
                        } //end if.
                        else {
                            //CEP pesquisado não foi encontrado.
                            limpa_formulário_cep();
                            alert("CEP não encontrado.");
                        }
                    });
                } //end if.
                else {
                    //cep é inválido.
                    limpa_formulário_cep();
                    alert("Formato de CEP inválido.");
                }
            } //end if.
            else {
                //cep sem valor, limpa formulário.
                limpa_formulário_cep();
            }
        });
    });

</script>


<h2>Criar Novo Paciente</h2>
<div class="content">

    @using (Html.BeginForm("Create", "Pacientes", FormMethod.Post, htmlAttributes: new { @id = "pacientes" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <table class="CadPro">

        <tr>
            <td>Licença</td>
            <td>
                @Html.DropDownListFor(model => model.Licencas, ViewBag.Licencas as SelectList, "Selecione uma Licença", htmlAttributes: new { @class = "select-pdr drop-down", @style = "width:240px" })
                @Html.ValidationMessageFor(model => model.Licencas.IdLicenca, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>Plano de Saúde</td>
            <td>
                @Html.DropDownListFor(model => model.PlanoSaude, ViewBag.PlanoSaude as SelectList, "Selecione um Plano de Saúde", htmlAttributes: new { @class = "select-pdr drop-down", @style = "width:240px" })
                @Html.ValidationMessageFor(model => model.PlanoSaude.IdPlanoSaude, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>Médico</td>
            <td>
                @Html.DropDownListFor(model => model.Usuarios, ViewBag.Usuarios as SelectList, "Selecione um Médico(a)", htmlAttributes: new { @class = "select-pdr drop-down", @style = "width:240px" })
                @Html.ValidationMessageFor(model => model.Usuarios.IdUsuario, "", new { @class = "text-danger" })
            </td>
        </tr>

        <tr>
            <td>Nome do Paciente</td>
            <td>
                @Html.EditorFor(model => model.NomePaciente, new { htmlAttributes = new { @class = "input-pdr", @style = "width:240px" } })
                @Html.ValidationMessageFor(model => model.NomePaciente, "", new { @class = "text-danger" })
            </td>
            <td>E-mail</td>
            <td>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "input-pdr", @style = "width:240px" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>CPF</td>
            <td>
                @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "input-pdr cpf", @style = "width:240px" } })
                @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
            </td>
            <td width="92px">Data de Nascimento</td>
            <td>
                <input name="DataNascimento" id="datetimepicker1" type="text" class="input-pdr" style="width: 240px" required />
            </td>
        </tr>
        <tr>
            <td>RG</td>
            <td>
                @Html.EditorFor(model => model.Rg, new { htmlAttributes = new { @class = "input-pdr", @style = "width:240px" } })
                @Html.ValidationMessageFor(model => model.Rg, "", new { @class = "text-danger" })
            </td>
            <td width="92px">Local de Emissão</td>
            <td>
                @Html.EditorFor(model => model.LocalEmissao, new { htmlAttributes = new { @class = "input-pdr", @style = "width:240px" } })
                @Html.ValidationMessageFor(model => model.LocalEmissao, "", new { @class = "text-danger" })

            </td>
        </tr>
        <tr>
            <td>Telefone 1</td>
            <td>
                @Html.EditorFor(model => model.Telefone1, new { htmlAttributes = new { @class = "input-pdr telefone", @style = "width:240px" } })
                @Html.ValidationMessageFor(model => model.Telefone1, "", new { @class = "text-danger" })
            </td>
            <td width="92px">Telefone 2</td>
            <td>
                @Html.EditorFor(model => model.Telefone2, new { htmlAttributes = new { @class = "input-pdr telefone", @style = "width:240px" } })
                @Html.ValidationMessageFor(model => model.Telefone2, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>CEP</td>
            <td>
                @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "input-pdr", @style = "width:240px", @maxlength = "9" } })
                @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>Rua</td>
            <td>
                @Html.EditorFor(model => model.Rua, new { htmlAttributes = new { @class = "input-pdr", @style = "width:240px" } })
                @Html.ValidationMessageFor(model => model.Rua, "", new { @class = "text-danger" })
            </td>
            <td width="92px">Número</td>
            <td>
                @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "input-pdr", @style = "width:240px" } })
                @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })

            </td>
        </tr>
        <tr>
            <td>Bairro</td>
            <td>
                @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "input-pdr", @style = "width:240px" } })
                @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
            </td>
            <td width="92px">Cidade</td>
            <td>
                @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "input-pdr", @style = "width:240px" } })
                @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })

            </td>
        </tr>
        <tr>
            <td>Estado</td>
            <td>
                @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "input-pdr", @style = "width:240px" } })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </td>
            <td width="92px">Complemento</td>
            <td>
                @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "input-pdr", @style = "width:240px" } })
                @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })

            </td>
        </tr>
        <tr>
            <td>Tipo Sanguíneo</td>
            <td>
                @Html.EditorFor(model => model.TipoSanguineo, new { htmlAttributes = new { @class = "input-pdr", @style = "width:240px" } })
                @Html.ValidationMessageFor(model => model.TipoSanguineo, "", new { @class = "text-danger" })
            </td>
            <td width="92px">Profissão</td>
            <td>
                @Html.EditorFor(model => model.Profissao, new { htmlAttributes = new { @class = "input-pdr", @style = "width:240px" } })
                @Html.ValidationMessageFor(model => model.Profissao, "", new { @class = "text-danger" })

            </td>
        </tr>
        <tr>
            <td>Alergia</td>
            <td>
                @Html.EditorFor(model => model.Alergia)
                @Html.ValidationMessageFor(model => model.Alergia, "", new { @class = "text-danger" })
            </td>
        </tr>

    </table>

        <br /><br />
        <table class="CadPro">

            <tr>
                <td>Observação</td>
                <td>
                    <textarea id="Obs" maxlength="500" name="Obs" class="pdr" style="height: 206px; min-height: 206px; max-height: 206px; width: 658px; min-width: 658px; max-width: 658px;"></textarea>
                    @Html.ValidationMessageFor(model => model.Obs, "", new { @class = "text-danger" })
                </td>
            </tr>

        </table>


        <table>
            <tr>
                <td colspan="4">
                    <input type="submit" value="Salvar" class="btn btnGreen" style="width: 85px; height: 34px; margin-left: 160px" />
                    <a href='@Url.Action("/", "Pacientes")'>
                        <input type="button" class="btn btnWhite dropdown-toggle" style="width: 85px; height: 34px;" value="Cancelar" />
                    </a>
                </td>
            </tr>
        </table>


    }

</div>

<script>
    $(function () {
        $("#datetimepicker1").datetimepicker({
            locale: moment.locale('pt-BR'),
            format: 'DD/MM/YYYY'
        });
    });
</script>